name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    environment: prod
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2.3.4
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21
      -
        name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5.0.0
        with: 
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      -
        name: Build windows
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          distribution: goreleaser-pro
          args: release --clean --split
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GOOS: windows
      -
        name: Sign the windows exe
        uses: "InertiaSystems/code-sign-action@v1.1.0"
        with:
          certificate: '${{ secrets.CSR_CERTIFICATE }}'
          password: '${{secrets.CERTPASS}}'
          certificatesha1: '${{secrets.CERTHASH}}'
          certificatename: '${{ secrets.CERTNAME }}'
          timestampUrl: 'http://timestamp.sectigo.com'
          folder: '.'
          recursive: falseus
      -
          name: Build the rest and release
          uses: goreleaser/goreleaser-action@v5
          with:
            version: latest
            distribution: goreleaser-pro
            args: continue --merge
          env:
            GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
            # GitHub sets this automatically
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}